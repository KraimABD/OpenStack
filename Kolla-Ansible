	 10.30.1.175 { 20GB Ubuntu-vg, + 40GB sda, virtual Disk} 2vCPU, RAM 8G,  Networking {ens160, ens192}
	 10.30.1.176 { 20GB Ubuntu-vg, + 40GB sda, virtual Disk} 2vCPU, RAM 8G, Networking {ens160, ens192}
	 10.30.1.177  { 20GB Ubuntu-vg, + 30GB sda, virtual Disk} 2vCPU, RAM 8G Networking {ens160, ens192}
	 10.30.1.178 { 20GB Ubuntu-vg, + 20GB sda, virtual Disk}, 1vCPU , RAM 2G Networking {ens160, ens192}

-----------------------------AJOUT DES DISQUES CREATION DU VOLUME GROUP

fdisk -l
pvcreate /dev/sdb 
vgcreate cinder-volumes /dev/sdb


**********Pre-requirement on deployement node
nano /etc/hostname
	deployment

nano /etc/hosts
controller 10.30.1.175
compute 10.30.1.176
block 10.30.1.177
deployment 10.30.1.178

visudo
	user ALL=(ALL) NOPASSWD:ALL

nano /etc/netplan/00
	{}
netplan apply

deployment:~#apt update
deployment:~#apt -y install docker.io
deployment:~#systemctl enable docker && systemctl restart docker


 


***********2 On all Openstack nodes*******************

nano /etc/hostname
	controller ...

controller:~#nano /etc/hosts
		
visudo
	user ALL=(ALL) NOPASSWD:ALL

nano /etc/netplan/00
	{}
netplan apply

controller:~#apt -y install docker.io && systemctl enable docker && systemctl restart docker
#reboot



******************************Sur l'ensemble des serveurs Update***************
sudo apt update && sudo apt -y upgrade



**************Deploiement de Ansible et kolla-ansible**************


sudo apt install python3-dev libffi-dev gcc libssl-dev -y
sudo apt install python3-pip -y
sudo pip3 install -U pip
sudo pip3 install -U 'ansible<2.10'
sudo pip3 install kolla-ansible==9.3.1
sudo mkdir -p /etc/kolla
sudo chown -R user:user /etc/kolla/
cp -r /usr/local/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
cp -r /usr/local/share/kolla-ansible/ansible/inventory/* /etc/kolla


********Configuration des fichiers********
1- Optimisation des parametres ansible pour le deploiement
vi ansible.cfg
[defaults]
host_key_checking=False
pipelining=True
forks=100

2- Mise à jour des fichiers de deploiments global et multinode

*vi /etc/kolla/globals.yml 

kolla_base_distro: "ubuntu"
kolla_install_type: "binary"
openstack_release: "ussuri"
kolla_internal_vip_address: "10.30.1.175"
network_interface: "eth0"
neutron_external_interface: "eth1"
enable_cinder: "yes"
enable_cinder_backend_lvm: "yes"
enable_haproxy: "no"
nova_compute_virt_type: "qemu"

# added: 
#cinder_volume_group: "cinder-volumes"
#cinder_iscsi_helper "tgtadm"

*nano /etc/kolla/multinode

3- Generation des mots de passes

  kolla-genpwd




4- Etablissement de la connexion sans mot de passe avec les autres noeuds

ssh-keygen -t rsa

ssh-copy-id user@controller

ssh-copy-id user@compute

ssh-copy-id user@block



*************Deploiement**************

1- Vérification des pré requis systeme

kolla-ansible -i /etc/kolla/multinode bootstrap-servers

2- Vérification des fichiers de configurations

kolla-ansible -i /etc/kolla/multinode prechecks


3- Déploiement
kolla-ansible -i /etc/kolla/multinode deploy


4- Post déploiement

kolla-ansible -i /etc/kolla/multinode post-deploy



***************** Ajout d'une image

------------- déploiement d'une instance

https://docs.openstack.org/image-guide/obtain-images.html

https://docs.openstack.org/nova/latest/admin/flavors.html


> Sur le controller
apt install python3-openstackclient -y
openstack image create --disk-format qcow2 --container-format bare   --public --file bionic-server-cloudimg-amd64.img ubuntu

#cloud-config
password: ubuntu1
chpasswd: { expire: False }
ssh_pwauth: True
hostname: instance01



--------------------Acces à la floating IP----------

route ADD 192.168.12.0 MASK 255.255.255.0 192.168.12.1

route -p ADD 192.168.35.0 MASK 255.255.255.0 192.168.0.2


route delete 192.168.12.0






------------------Floating Ip------------
[Controller: physnet1] 
cat /etc/kolla/neutron-server/ml2_conf.ini

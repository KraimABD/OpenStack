
! Adapter 2: Promiscuous Mode = Allow All

Mi@$aNm1@
good4Forfood

# Config

sudo su
visudo
		amessk ALL=(ALL) NOPASSWD:ALL
# Edit /etc/hosts
# Remove 127.0.1.1 "&CONTROLLER_NAME&", if present
# Add
nano /etc/hosts
10.0.0.11 controller
10.0.0.31 compute
10.0.0.41 block

# Change hostname
nano /etc/hostname

# Check network interface Drivers
lshw -c network

# Enable Network Interfaces
sudo nano /etc/netplan/00

# This is the network config written by 'subiquity'
network:
  ethernets:
    enp0s3:
      dhcp4: false
      addresses: [10.0.0.11/24]
      gateway4: 10.0.0.1
      nameservers:
         addresses: [8.8.8.8,8.8.4.4]
      match:
          driver: e1000
          macaddress: 08:00:27:a4:9c:ca
      set-name: eth0
    enp0s8:
      dhcp4: false
      match:
          driver: e1000
          macaddress: 08:00:27:92:e7:f0
      set-name: eth1
    enp0s9:
      dhcp4: true
      match:
          driver: e1000
          macaddress: 08:00:27:7a:58:01
      set-name: eth2




# Test the connectivity
ping 8.8.8.8
ping controller
ping compute
ping block


# Disable Firewall
sudo ufw status verbose
sudo ufw disable



reboot



#Install and Configure Network Time Protocol

sudo su
apt install chrony -y

#Edit /etc/chrony/chrony.conf:
nano /etc/chrony/chrony.conf
	# set server to your Orgaznization's NTP Server, if you have one
	allow 10.0.0.0/24
	# save and quit

systemctl enable chronyd.service
systemctl start chronyd.service

# Verify
chronyc sources




# Install Basic OpenStack Packages

sudo add-apt-repository cloud-archive:xena
sudo apt install nova-compute -y
sudo apt install python3-openstackclient -y




# SQL Database - MariaDB

sudo apt install mariadb-server python3-pymysql -y

# Create and edit MariaDB configuration file:Â /etc/mysql/mariadb.conf.d/99-openstack.cnf

sudo nano /etc/mysql/mariadb.conf.d/99-openstack.cnf
[mysqld]
bind-address = 10.0.0.11
default-storage-engine = innodb
innodb_file_per_table = on
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8


# Restart MariaDB service:


service mysql restart

# Secure the Database Service, Yes(openstack) No No:
# Yes remove anonymouse users
# No Disallow
# Yes Remove test database
# Yes Reload

mysql_secure_installation

#{Can be automated !!}
*/ 
mysql_secure_installation <<EOF

y
secret
secret
y
y
y
y
EOF
*/

# Message Queue - RabbitMQ

sudo apt install rabbitmq-server -y
rabbitmqctl add_user openstack openstack
rabbitmqctl set_permissions openstack ".*" ".*" ".*"


# Memcached

sudo apt install memcached python3-memcache -y

# Edit /etc/memcached.conf to define IP address:
nano /etc/memcached.conf
# find -l 127.0.0.1 and change it with 10.0.0.11
-l 10.0.0.11

service memcached restart



# Etcd
sudo apt install etcd -y

*/ Try to use crudini here */

# Create and edit the /etc/default/etcd file
nano /etc/default/etcdHiHi

ETCD_NAME="controller"
ETCD_DATA_DIR="/var/lib/etcd"
ETCD_INITIAL_CLUSTER_STATE="new"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster-01"
ETCD_INITIAL_CLUSTER="controller=http://10.0.0.11:2380"
ETCD_INITIAL_ADVERTISE_PEER_URLS="http://10.0.0.11:2380"
ETCD_ADVERTISE_CLIENT_URLS="http://10.0.0.11:2379"
ETCD_LISTEN_PEER_URLS="http://0.0.0.0:2380"
ETCD_LISTEN_CLIENT_URLS="http://10.0.0.11:2379"


systemctl enable etcd
systemctl restart etcd




##### Installation of OpenStack componenet is done  ####


######## Install Keystone - Identity Management #########
## Configure SQL Database for Keystone:
 


sudo su
mysql
CREATE DATABASE keystone;

GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'openstack';
EXIT;


# Install required packages + crudini to edit .conf files
apt install keystone libapache2-mod-wsgi-py3 crudini -y
# Configure Keystone database access, as set above
crudini --set /etc/keystone/keystone.conf database connection mysql+pymysql://keystone:openstack@controller/keystone

### !!!! Comment out or remove any other connection options in the [database] section. !!!!! ###


crudini --set /etc/keystone/keystone.conf token provider fernet
# Populate Identity Service Database
su -s /bin/sh -c "keystone-manage db_sync" keystone
# Initialize Fernet Repositories
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
keystone-manage credential_setup --keystone-user keystone --keystone-group keystone


# Bootstrap Identity Service
keystone-manage bootstrap --bootstrap-password openstack \
  --bootstrap-admin-url http://controller:5000/v3/ \
  --bootstrap-internal-url http://controller:5000/v3/ \
  --bootstrap-public-url http://controller:5000/v3/ \
  --bootstrap-region-id RegionOne

# Edit /etc/apache2/apache2.conf and add following line:
#apt install apache2
nano /etc/apache2/apache2.conf
		ServerName controller

# Restart the apache2 service
service apache2 restart


# Create a Script, if you're root exit to the user
exit
touch admin-openrc

export OS_USERNAME=admin
export OS_PASSWORD=openstack
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3



openstack domain create --description "An Example Domain" example
#No output? please Reboot


# Create a service Project
openstack project create --domain default --description "Service Project" service

# Create a myproject Project
openstack project create --domain default --description "Demo Project" myproject

# Create a myuser User
openstack user create --domain default --password-prompt myuser
# Create a user Role
openstack role create myrole

# Add the user role to User demo in Project demo
openstack role add --project myproject --user myuser myrole


#Verify User demo	
##Run following commands:
unset OS_AUTH_URL OS_PASSWORD

# For the admin
openstack --os-auth-url http://controller:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name admin --os-username admin token issue

# For the myuser
openstack --os-auth-url http://controller:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name myproject --os-username myuser token issue


# Create a User script


nano admin-openrc
export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=openstack
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2



nano demo-openrc
export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=myproject
export OS_USERNAME=myuser
export OS_PASSWORD=openstack
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2


# test
. admin-openrc
openstack token issue


############################## Install Glance - Image Service  ###############################
# Configure SQL Database for Glance
sudo su
mysql
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'openstack';
EXIT;


# Create glance User
. admin-openrc
openstack user create --domain default --password openstack glance

# Add admin role to User glance in Project service
openstack role add --project service --user glance admin


openstack service create --name glance --description "OpenStack Image" image

openstack endpoint create --region RegionOne image public http://controller:9292

openstack endpoint create --region RegionOne image internal http://controller:9292

openstack endpoint create --region RegionOne image admin http://controller:9292





# Install and Configure Packages
sudo su
apt install glance -y

# Configure database access for glance
crudini --set /etc/glance/glance-api.conf database connection mysql+pymysql://glance:openstack@controller/glance

# Configure Identity Service access
crudini --set /etc/glance/glance-api.conf keystone_authtoken auth_uri http://controller:5000
crudini --set /etc/glance/glance-api.conf keystone_authtoken auth_url http://controller:5000
crudini --set /etc/glance/glance-api.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/glance/glance-api.conf keystone_authtoken auth_type password
crudini --set /etc/glance/glance-api.conf keystone_authtoken project_domain_name Default
crudini --set /etc/glance/glance-api.conf keystone_authtoken user_domain_name Default
crudini --set /etc/glance/glance-api.conf keystone_authtoken project_name service
crudini --set /etc/glance/glance-api.conf keystone_authtoken username glance
crudini --set /etc/glance/glance-api.conf keystone_authtoken password openstack
crudini --set /etc/glance/glance-api.conf paste_deploy flavor keystone

# Configure Glance to store Images on Local Filesystem
crudini --set /etc/glance/glance-api.conf glance_store stores "file,http"
crudini --set /etc/glance/glance-api.conf glance_store default_store file
crudini --set /etc/glance/glance-api.conf glance_store filesystem_store_datadir /var/lib/glance/images/

# Add this:

*/
[oslo_limit]
auth_url = http://controller:5000
auth_type = password
user_domain_id = default
username = MY_SERVICE
system_scope = all
password = openstack
endpoint_id = ENDPOINT_ID
region_name = RegionOne

 openstack role add --user MY_SERVICE --user-domain Default --system all reader

/*

# Populate the Image Service Database
su -s /bin/sh -c "glance-manage db_sync" glance
service glance-api restart

# Verify Glance Operation
exit
. admin-openrc
wget http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img

glance image-create --name "cirros" \
  --file cirros-0.3.5-x86_64-disk.img \
  --disk-format qcow2 --container-format bare \
  --visibility=public

glance image-list


# Placement Configuration:
sudo su
mysql
CREATE DATABASE placement;

GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'localhost' \
  IDENTIFIED BY 'openstack';

GRANT ALL PRIVILEGES ON placement.* TO 'placement'@'%' \
  IDENTIFIED BY 'openstack';

exit;
. admin-openrc



 openstack user create --domain default --password-prompt placement

openstack role add --project service --user placement admin

openstack service create --name placement \
  --description "Placement API" placement

openstack endpoint create --region RegionOne \
  placement public http://controller:8778

 openstack endpoint create --region RegionOne \
  placement internal http://controller:8778

openstack endpoint create --region RegionOne \
  placement admin http://controller:8778

sudo su
apt install placement-api -y

sudo nano  /etc/placement/placement.conf
# Add this:
[placement_database]
# ...
connection = mysql+pymysql://placement:openstack@controller/placement

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://controller:5000/v3
memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = placement
password = openstack

su -s /bin/sh -c "placement-manage db sync" placement

service apache2 restart

# Verification
. admin-openrc

placement-status upgrade check
# Error ? 
######## I run in the same problem with 'placement-status upgrade check' on the command line.
The cause of this problem is a lack of read rights to the directory /etc/placement and the file /etc/placement/placement.conf. The directory /etc/placement can only be read by the user root and the group placement. After adding my user account to the placement group, everything worked as expected. ##########


#pip3 install osc-placement
# openstack --os-placement-api-version 1.2 resource class list --sort-column name
# openstack --os-placement-api-version 1.6 trait list --sort-column name


#####################"" Install & Configure Nova (Compute Service) Controller  ############################



## Configure SQL Databases for Nova
sudo su
mysql
CREATE DATABASE nova_api;
CREATE DATABASE nova;
CREATE DATABASE nova_cell0;

GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON nova_cell0.* TO 'nova'@'%' IDENTIFIED BY 'openstack';
exit;
exit


# Create Compute Service & Endpoints
. admin-openrc
openstack user create --domain default --password openstack nova
openstack role add --project service --user nova admin

openstack service create --name nova \
  --description "OpenStack Compute" compute
openstack endpoint create --region RegionOne \
  compute public http://controller:8774/v2.1  
openstack endpoint create --region RegionOne \
  compute internal http://controller:8774/v2.1

openstack endpoint create --region RegionOne \
  compute admin http://controller:8774/v2.1



# Install Nova Controller Packages
sudo su
apt install -y nova-api nova-conductor nova-novncproxy nova-scheduler


# Configure MySQL & RabbitMQ parameters in /etc/nova/nova.conf
nano /etc/nova/nova.conf
crudini --set /etc/nova/nova.conf api_database connection mysql+pymysql://nova:openstack@controller/nova_api
crudini --set /etc/nova/nova.conf database connection mysql+pymysql://nova:openstack@controller/nova
crudini --set /etc/nova/nova.conf DEFAULT transport_url rabbit://openstack:openstack@controller:5672/


# Configure Identity Service access
crudini --set /etc/nova/nova.conf api auth_strategy keystone
crudini --set /etc/nova/nova.conf keystone_authtoken www_authenticate_uri http://controller:5000
crudini --set /etc/nova/nova.conf keystone_authtoken auth_url http://controller:5000
crudini --set /etc/nova/nova.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/nova/nova.conf keystone_authtoken auth_type password
crudini --set /etc/nova/nova.conf keystone_authtoken project_domain_name Default
crudini --set /etc/nova/nova.conf keystone_authtoken user_domain_name Default
crudini --set /etc/nova/nova.conf keystone_authtoken project_name service
crudini --set /etc/nova/nova.conf keystone_authtoken username nova
crudini --set /etc/nova/nova.conf keystone_authtoken password openstack


# Configure support for Networking Service
crudini --set /etc/nova/nova.conf DEFAULT my_ip 10.0.0.11

# Configure vnc proxy on Controller Node
crudini --set /etc/nova/nova.conf vnc enabled True
crudini --set /etc/nova/nova.conf vnc server_listen 10.0.0.11
crudini --set /etc/nova/nova.conf vnc server_proxyclient_address 10.0.0.11

crudini --set /etc/nova/nova.conf glance api_servers http://controller:9292

crudini --set /etc/nova/nova.conf oslo_concurrency lock_path /var/lib/nova/tmp

crudini --set /etc/nova/nova.conf placement region_name RegionOne
crudini --set /etc/nova/nova.conf placement project_domain_name Default
crudini --set /etc/nova/nova.conf placement project_name service
crudini --set /etc/nova/nova.conf placement auth_type password
crudini --set /etc/nova/nova.conf placement user_domain_name Default
crudini --set /etc/nova/nova.conf placement auth_url http://controller:5000/v3
crudini --set /etc/nova/nova.conf placement username placement
crudini --set /etc/nova/nova.conf placement password openstack



su -s /bin/sh -c "nova-manage api_db sync" nova

su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova

su -s /bin/sh -c "nova-manage db sync" nova

# Verify nova cell0 and cell1 are registered correctly:
su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova




service nova-api restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart




!!!!!!!!!!!!!!!  Install and Configure Nova on Compute Node(s)   !!!!!!!!!!!!!!!!!!!!!!

# Discover Compute Nodes


. admin-openrc
openstack compute service list --service nova-compute
su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova

. admin-openrc
openstack compute service list
openstack catalog list
openstack image list
nova-status upgrade check



##############   Install Neutron (Network Service) on Controller Node    ###############
sudo su
mysql
CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'openstack';
EXIT;

exit
. admin-openrc
openstack user create --domain default --password openstack neutron
openstack role add --project service --user neutron admin


openstack service create --name neutron --description "OpenStack Networking" network
openstack endpoint create --region RegionOne network public http://controller:9696
openstack endpoint create --region RegionOne network internal http://controller:9696
openstack endpoint create --region RegionOne network admin http://controller:9696


apt install -y neutron-server neutron-plugin-ml2 neutron-linuxbridge-agent neutron-dhcp-agent  neutron-metadata-agent
 
crudini --set /etc/neutron/neutron.conf database connection mysql+pymysql://neutron:openstack@controller/neutron


crudini --set /etc/neutron/neutron.conf DEFAULT core_plugin ml2


crudini --set /etc/neutron/neutron.conf DEFAULT transport_url rabbit://openstack:openstack@controller


#crudini --set /etc/neutron/neutron.conf DEFAULT service_plugins router
#crudini --set /etc/neutron/neutron.conf DEFAULT allow_overlapping_ips true

crudini --set /etc/neutron/neutron.conf DEFAULT auth_strategy keystone

crudini --set /etc/neutron/neutron.conf keystone_authtoken www_authenticate_uri http://controller:5000
crudini --set /etc/neutron/neutron.conf keystone_authtoken auth_url http://controller:5000
crudini --set /etc/neutron/neutron.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/neutron/neutron.conf keystone_authtoken auth_type password
crudini --set /etc/neutron/neutron.conf keystone_authtoken project_domain_name default
crudini --set /etc/neutron/neutron.conf keystone_authtoken user_domain_name default
crudini --set /etc/neutron/neutron.conf keystone_authtoken project_name service
crudini --set /etc/neutron/neutron.conf keystone_authtoken username neutron
crudini --set /etc/neutron/neutron.conf keystone_authtoken password openstack

crudini --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_status_changes true
crudini --set /etc/neutron/neutron.conf DEFAULT notify_nova_on_port_data_changes true

crudini --set /etc/neutron/neutron.conf nova auth_url http://controller:5000
crudini --set /etc/neutron/neutron.conf nova auth_type password
crudini --set /etc/neutron/neutron.conf nova project_domain_name default
crudini --set /etc/neutron/neutron.conf nova user_domain_name default
crudini --set /etc/neutron/neutron.conf nova region_name RegionOne
crudini --set /etc/neutron/neutron.conf nova project_name service
crudini --set /etc/neutron/neutron.conf nova username nova
crudini --set /etc/neutron/neutron.conf nova password openstack

# Add this:
[oslo_concurrency]
# ...
lock_path = /var/lib/neutron/tmp


# Enable flat, VLAN and VXLAN Networks
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 type_drivers flat,vlan

# Enable VXLAN Self-service Networks
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 tenant_network_types 

# Enable Linux Bridge and L2Population mechanisms
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers linuxbridge

# Enable Port Security Extenstion Driver
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2 extension_drivers port_security

# Configure provider Virtual Network as flat Network
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_flat flat_networks provider

# Configure VXLAN Network Identifier Range for Self-service Networks
#crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini ml2_type_vxlan vni_ranges 1:1000

# Enable ipset to increase efficiency of Security Group Rules
crudini --set /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup enable_ipset true


# Configure provider Virtual Network mapping to Physical Interface
crudini --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini linux_bridge physical_interface_mappings provider:eth1

# Enable VXLAN for Self-service Networks, configure IP address of the Management Interface handling VXLAN traffic
crudini --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan enable_vxlan false

#crudini --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan local_ip 10.30.1.175
#crudini --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini vxlan l2_population true

# Enable security groups and configure the Linux bridge iptables firewall driver
crudini --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup enable_security_group true
crudini --set /etc/neutron/plugins/ml2/linuxbridge_agent.ini securitygroup firewall_driver neutron.agent.linux.iptables_firewall.IptablesFirewallDriver

#crudini --set /etc/neutron/l3_agent.ini DEFAULT interface_driver linuxbridge
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT interface_driver linuxbridge
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT dhcp_driver neutron.agent.linux.dhcp.Dnsmasq
crudini --set /etc/neutron/dhcp_agent.ini DEFAULT enable_isolated_metadata true


# Create provider network

crudini --set /etc/neutron/metadata_agent.ini DEFAULT nova_metadata_host controller
crudini --set /etc/neutron/metadata_agent.ini DEFAULT metadata_proxy_shared_secret openstack

#crudini --set /etc/nova/nova.conf neutron url http://controller:9696
crudini --set /etc/nova/nova.conf neutron auth_url http://controller:5000
crudini --set /etc/nova/nova.conf neutron auth_type password
crudini --set /etc/nova/nova.conf neutron project_domain_name default
crudini --set /etc/nova/nova.conf neutron user_domain_name default
crudini --set /etc/nova/nova.conf neutron region_name RegionOne
crudini --set /etc/nova/nova.conf neutron project_name service
crudini --set /etc/nova/nova.conf neutron username neutron
crudini --set /etc/nova/nova.conf neutron password openstack
crudini --set /etc/nova/nova.conf neutron service_metadata_proxy true
crudini --set /etc/nova/nova.conf neutron metadata_proxy_shared_secret openstack


su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron


service nova-api restart

service neutron-server restart
service neutron-linuxbridge-agent restart
service neutron-dhcp-agent restart
service neutron-metadata-agent restart




!!!!!!!!!!      Install Neutron on Compute Nodes         !!!!!!!!!!!!!!


#Verify Installation

. admin-openrc
openstack network agent list

# The output should indicate three agents on the controller node and one agent on each compute node.

!!!!!!!!!!!!!!!!!    Storage Node First Go and install Cinder volume   !!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!! Installation of Cinder on Controller Node   !!!!!!!!!!!!!!
# Create Cinder Database
sudo su
mysql
CREATE DATABASE cinder;
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED BY 'openstack';
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' IDENTIFIED BY 'openstack';
EXIT;


. admin-openrc
openstack user create --domain default --password openstack cinder
openstack role add --project service --user cinder admin


openstack service create --name cinderv3 --description "OpenStack Block Storage" volumev3


openstack endpoint create --region RegionOne volumev3 public http://controller:8776/v3/%\(project_id\)s


openstack endpoint create --region RegionOne volumev3 internal http://controller:8776/v3/%\(project_id\)s

openstack endpoint create --region RegionOne volumev3 admin http://controller:8776/v3/%\(project_id\)s


apt install -y cinder-api cinder-scheduler


crudini --set /etc/cinder/cinder.conf database connection mysql+pymysql://cinder:openstack@controller/cinder
crudini --set /etc/cinder/cinder.conf DEFAULT transport_url rabbit://openstack:openstack@controller


crudini --set /etc/cinder/cinder.conf DEFAULT auth_strategy keystone
crudini --set /etc/cinder/cinder.conf keystone_authtoken www_authenticate_uri http://controller:5000
crudini --set /etc/cinder/cinder.conf keystone_authtoken auth_url http://controller:5000
crudini --set /etc/cinder/cinder.conf keystone_authtoken memcached_servers controller:11211
crudini --set /etc/cinder/cinder.conf keystone_authtoken auth_type password
crudini --set /etc/cinder/cinder.conf keystone_authtoken project_domain_name default
crudini --set /etc/cinder/cinder.conf keystone_authtoken user_domain_name default
crudini --set /etc/cinder/cinder.conf keystone_authtoken project_name service
crudini --set /etc/cinder/cinder.conf keystone_authtoken username cinder
crudini --set /etc/cinder/cinder.conf keystone_authtoken password openstack


## !!!! Comment out or remove any other options in the [keystone_authtoken] section.

crudini --set /etc/cinder/cinder.conf DEFAULT my_ip 10.0.0.11
crudini --set /etc/cinder/cinder.conf oslo_concurrency lock_path /var/lib/cinder/tmp


su -s /bin/sh -c "cinder-manage db sync" cinder

crudini --set /etc/nova/nova.conf cinder os_region_name RegionOne


service nova-api restart
service cinder-scheduler restart
service apache2 restart

exit

/// Tests
. admin-openrc
openstack volume service list
openstack volume create --size 1 test-volume
openstack volume list
/// Go to Storage and run >>lvdisplay  To check the added logical volume 

******************  Horizon ***********
sudo su
apt install -y openstack-dashboard

# Change this to the correct values or watch the video
nano /etc/openstack-dashboard/local_settings.py

OPENSTACK_HOST = "controller"

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'

CACHES = {
    'default': {
         BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
         'LOCATION': 'controller:11211',

    }
}

### !!!!! Comment out any other session storage configuration.

OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST

OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True

OPENSTACK_API_VERSIONS = {
    "identity": 3,
    "image": 2,
    "volume": 2,
}

OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = "Default"

OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"

OPENSTACK_NEUTRON_NETWORK = {
    ...
    'enable_router': False,
    'enable_quotas': False,
    'enable_ipv6': False,
    'enable_distributed_router': False,
    'enable_ha_router': False,
    'enable_fip_topology_check': False,
}


nano /etc/apache2/conf-available/openstack-dashboard.conf 
# Include following line:	
	
WSGIApplicationGroup %{GLOBAL}	
	

systemctl reload apache2.service	
	
# Verify Horizon Operation by pointing Web Browser to	
	
http://10.30.1.175/horizon	

















































